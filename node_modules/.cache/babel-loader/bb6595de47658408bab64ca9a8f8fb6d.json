{"ast":null,"code":"var _jsxFileName = \"/home/joaovictor/Documentos/DashBords/ControleFinanceiroReact/src/components/Forms/OrderForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Controls from '../Controls/Controls';\nimport { CustomerForm, Form } from '../Forms/CustomForm';\nimport * as employeeService from '../../services/employeeService';\nimport Title from '../BaseDasbord/Title';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst typeItems = [{\n  id: 'despesa',\n  title: 'Despesa'\n}, {\n  id: 'receita',\n  title: 'Receita'\n}, {\n  id: 'outros',\n  title: 'Outros'\n}];\nconst initialFValues = {\n  id: 0,\n  valor: '',\n  tipo: 'despesa',\n  receptor: '',\n  hireDate: new Date(),\n  isPay: false\n};\nexport default function Orderpage() {\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n    if ('fullName' in fieldValues) temp.fullName = fieldValues.fullName ? '' : 'This field is required.';\n    if ('email' in fieldValues) temp.email = /$^|.+@.+..+/.test(fieldValues.email) ? '' : 'Email is not valid.';\n    if ('mobile' in fieldValues) temp.mobile = fieldValues.mobile.length > 9 ? '' : 'Minimum 10 numbers required.';\n    if ('departmentId' in fieldValues) temp.departmentId = fieldValues.departmentId.length !== 0 ? '' : 'This field is required.';\n    setErrors({ ...temp\n    });\n    if (fieldValues == values) return Object.values(temp).every(x => x === '');\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = CustomerForm(initialFValues, true, validate);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      employeeService.insertEmployee(values);\n      resetForm();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 12,\n          md: 6,\n          lg: 6,\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            children: \"Cadastar Contas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Select, {\n            name: \"receptor\",\n            label: \"Receptor\",\n            value: values.departmentId,\n            onChange: handleInputChange,\n            options: employeeService.getDepartmentCollection(),\n            error: errors.departmentId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n            name: \"valor\",\n            label: \"Valor\",\n            value: values.fullName,\n            onChange: handleInputChange,\n            error: errors.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 12,\n          md: 6,\n          lg: 6,\n          children: [/*#__PURE__*/_jsxDEV(Controls.RadioGroup, {\n            name: \"tipo\",\n            label: \"Tipo\",\n            value: values.gender,\n            onChange: handleInputChange,\n            items: typeItems\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controls.DatePicker, {\n            name: \"hireDate\",\n            label: \"Hire Date\",\n            value: values.hireDate,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Checkbox, {\n            name: \"isPay\",\n            label: \"Paga?\",\n            value: values.isPermanent,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Controls.Button, {\n              type: \"submit\",\n              text: \"Salvar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n              text: \"Cancelar\",\n              color: \"default\",\n              onClick: resetForm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = Orderpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orderpage\");","map":{"version":3,"sources":["/home/joaovictor/Documentos/DashBords/ControleFinanceiroReact/src/components/Forms/OrderForm.js"],"names":["React","useState","useEffect","Grid","Controls","CustomerForm","Form","employeeService","Title","typeItems","id","title","initialFValues","valor","tipo","receptor","hireDate","Date","isPay","Orderpage","validate","fieldValues","values","temp","errors","fullName","email","test","mobile","length","departmentId","setErrors","Object","every","x","setValues","handleInputChange","resetForm","handleSubmit","e","preventDefault","insertEmployee","getDepartmentCollection","gender","isPermanent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Controls from '../Controls/Controls';\nimport { CustomerForm, Form } from '../Forms/CustomForm';\nimport * as employeeService from '../../services/employeeService';\nimport Title from '../BaseDasbord/Title';\n\nconst typeItems = [\n  { id: 'despesa', title: 'Despesa' },\n  { id: 'receita', title: 'Receita' },\n  { id: 'outros', title: 'Outros' },\n];\n\nconst initialFValues = {\n  id: 0,\n  valor: '',\n  tipo: 'despesa',\n  receptor: '',\n  hireDate: new Date(),\n  isPay: false,\n};\n\nexport default function Orderpage() {\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors };\n    if ('fullName' in fieldValues)\n      temp.fullName = fieldValues.fullName ? '' : 'This field is required.';\n    if ('email' in fieldValues)\n      temp.email = /$^|.+@.+..+/.test(fieldValues.email) ? '' : 'Email is not valid.';\n    if ('mobile' in fieldValues)\n      temp.mobile = fieldValues.mobile.length > 9 ? '' : 'Minimum 10 numbers required.';\n    if ('departmentId' in fieldValues)\n      temp.departmentId = fieldValues.departmentId.length !== 0 ? '' : 'This field is required.';\n    setErrors({\n      ...temp,\n    });\n\n    if (fieldValues == values) return Object.values(temp).every((x) => x === '');\n  };\n\n  const { values, setValues, errors, setErrors, handleInputChange, resetForm } = CustomerForm(\n    initialFValues,\n    true,\n    validate\n  );\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate()) {\n      employeeService.insertEmployee(values);\n      resetForm();\n    }\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Grid container>\n          <Grid item xs={12} sm={12} md={6} lg={6}>\n          <Title>Cadastar Contas</Title>\n            <Controls.Select\n              name=\"receptor\"\n              label=\"Receptor\"\n              value={values.departmentId}\n              onChange={handleInputChange}\n              options={employeeService.getDepartmentCollection()}\n              error={errors.departmentId}\n            />\n            <Controls.Input\n              name=\"valor\"\n              label=\"Valor\"\n              value={values.fullName}\n              onChange={handleInputChange}\n              error={errors.fullName}\n            />\n          </Grid>\n          <Grid item xs={12} sm={12} md={6} lg={6}>\n            <Controls.RadioGroup\n              name=\"tipo\"\n              label=\"Tipo\"\n              value={values.gender}\n              onChange={handleInputChange}\n              items={typeItems}\n            />\n\n            <Controls.DatePicker\n              name=\"hireDate\"\n              label=\"Hire Date\"\n              value={values.hireDate}\n              onChange={handleInputChange}\n            />\n            <Controls.Checkbox\n              name=\"isPay\"\n              label=\"Paga?\"\n              value={values.isPermanent}\n              onChange={handleInputChange}\n            />\n\n            <div>\n              <Controls.Button type=\"submit\" text=\"Salvar\" />\n              <Controls.Button text=\"Cancelar\" color=\"default\" onClick={resetForm} />\n            </div>\n          </Grid>\n        </Grid>\n      </Form>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}